from simple_config import config
import sqlite3

class Settings:
    def __init__(self):
        pass
    
    # main_settings
    def get_token(self):
        token = config.get('BOT_TOKEN')
        if not token:
            print("‚ùå –û—à–∏–±–∫–∞: –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ config.txt!")
            print("üìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª config.txt –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞")
            exit(1)
        return token
    
    def set_token(self, value):
        # –î–ª—è –ø—Ä–æ—Å—Ç–æ–≥–æ –∫–æ–Ω—Ñ–∏–≥–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –∫–æ–¥
        print("‚ö†Ô∏è –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª config.txt")
        
    def is_debug(self):
        return config.get_bool('DEBUG', False)
        
    def set_debug(self, value):
        print("‚ö†Ô∏è –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞ –æ—Ç–ª–∞–¥–∫–∏ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª config.txt")
    
    def get_main_admin_id(self):
        admin_id = config.get('ADMIN_ID')
        if not admin_id:
            print("‚ùå –û—à–∏–±–∫–∞: ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ config.txt!")
            exit(1)
        return int(admin_id)
    
    def set_main_admin_id(self, value):
        print("‚ö†Ô∏è –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª config.txt")
    
    # shop_settings
    def get_shop_name(self):
        return config.get('SHOP_NAME', '–ú–æ–π –º–∞–≥–∞–∑–∏–Ω')
    
    def set_shop_name(self, value):
        print("‚ö†Ô∏è –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –º–∞–≥–∞–∑–∏–Ω–∞ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª config.txt")
    
    def get_greeting(self):
        return config.get('GREETING', '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!')
    
    def set_greeting(self, value):
        print("‚ö†Ô∏è –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª config.txt")
    
    def get_refund_policy(self):
        return config.get('REFUND_POLICY', '–ü–æ–ª–∏—Ç–∏–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞')
    
    def set_refund_policy(self, value):
        print("‚ö†Ô∏è –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª–∏—Ç–∏–∫–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª config.txt")
    
    def get_contacts(self):
        return config.get('CONTACTS', '–ö–æ–Ω—Ç–∞–∫—Ç—ã –Ω–µ —É–∫–∞–∑–∞–Ω—ã')
    
    def set_contacts(self, value):
        print("‚ö†Ô∏è –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª config.txt")
    
    def is_image_enabled(self):
        return config.get_bool('ENABLE_IMAGE', True)
    
    def set_image_enabled(self, value):
        print("‚ö†Ô∏è –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª config.txt")
    
    def is_sticker_enabled(self):
        return config.get_bool('ENABLE_STICKER', False)
    
    def set_sticker_enabled(self, value):
        print("‚ö†Ô∏è –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å—Ç–∏–∫–µ—Ä–æ–≤ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª config.txt")
    
    def is_phone_number_enabled(self):
        return config.get_bool('ENABLE_PHONE_NUMBER', False)
    
    def set_phone_number_enabled(self, value):
        print("‚ö†Ô∏è –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª config.txt")
    
    def is_delivery_enabled(self):
        return config.get_bool('ENABLE_DELIVERY', False)
    
    def set_delivery_enabled(self, value):
        print("‚ö†Ô∏è –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–æ—Å—Ç–∞–≤–∫–∏ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª config.txt")
    
    def get_delivery_price(self):
        return config.get_float('DELIVERY_PRICE', 0.0)
    
    def set_delivery_price(self, value):
        print("‚ö†Ô∏è –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω—ã –¥–æ—Å—Ç–∞–≤–∫–∏ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª config.txt")
    
    # stats_settings (–∑–∞–≥–ª—É—à–∫–∏ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
    def get_bar_color(self):
        return "3299ff"  # –°–∏–Ω–∏–π —Ü–≤–µ—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    
    def set_bar_color(self, value):
        print("‚ö†Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è")
    
    # database methods (—Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
    def create_database(self):
        conn = sqlite3.connect("data.db")
        cursor = conn.cursor()
        
        cursor.execute("""CREATE TABLE IF NOT EXISTS users (
            user_id INTEGER PRIMARY KEY,
            username TEXT,
            first_name TEXT,
            last_name TEXT,
            phone_number TEXT,
            registration_date TEXT
        )""")
        
        cursor.execute("""CREATE TABLE IF NOT EXISTS items (
            item_id INTEGER PRIMARY KEY AUTOINCREMENT,
            name TEXT NOT NULL,
            description TEXT,
            price REAL NOT NULL,
            image_path TEXT,
            category TEXT
        )""")
        
        cursor.execute("""CREATE TABLE IF NOT EXISTS orders (
            order_id INTEGER PRIMARY KEY AUTOINCREMENT,
            user_id INTEGER,
            items TEXT,
            total_price REAL,
            order_date TEXT,
            status TEXT,
            delivery_address TEXT,
            phone_number TEXT
        )""")
        
        cursor.execute("""CREATE TABLE IF NOT EXISTS categories (
            category_id INTEGER PRIMARY KEY AUTOINCREMENT,
            name TEXT NOT NULL UNIQUE
        )""")
        
        conn.commit()
        conn.close()
    
    def remove_database(self):
        try:
            from os import remove
            remove("../database.db")
            return True
        except:
            return False